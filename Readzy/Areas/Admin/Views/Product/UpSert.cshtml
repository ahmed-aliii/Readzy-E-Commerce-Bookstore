@model ProductViewModel
@{
    ViewData["Title"] = "Edit";
    SelectList categoryiesselectList = new SelectList(Model.categories, "Id", "Name");
}



<div class="row pb-3 mt-2 shadow-sm rounded-1 ">

    <div class="row text-light text-center bg-primary rounded-1 pb-3 pt-3 ms-0">
        <h2> @(Model.Id!=0?"Update":"Create") Book </h2>
    </div>

    <div class="row">
        <div class="col-10">
            <form asp-controller="Product" asp-action="SaveUpSert" method="post" enctype="multipart/form-data">
                <div asp-validation-summary="All" class="text-danger"></div>

                <input asp-for="Id" hidden />
                <input asp-for="ImageURL" hidden />


                <div class="form-group mb-3 ">
                    <label asp-for="Title" class="control-label">Book Title</label>
                    <input asp-for="Title" class="form-control rounded-1" />
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>

                <div class="form-group mb-3 ">
                    <label asp-for="Description" class="control-label"></label>
                    <textarea asp-for="Description" class="form-control rounded-1"></textarea>
                </div>

                <div class="form-group mb-3 ">
                    <label asp-for="Author" class="control-label"></label>
                    <input asp-for="Author" class="form-control rounded-1" />
                    <span asp-validation-for="Author" class="text-danger"></span>
                </div>

                <div class="form-group mb-3 ">
                    <label asp-for="Price" class="control-label"></label>
                    <input asp-for="Price" class="form-control rounded-1" />
                    <span asp-validation-for="Price" class="text-danger"></span>
                </div>

                <div class="form-group mb-3 ">
                    <label asp-for="ISBN" class="control-label"></label>
                    <input asp-for="ISBN" class="form-control rounded-1" />
                    <span asp-validation-for="ISBN" class="text-danger"></span>
                </div>

                <div class="form-group mb-3 ">
                    <label asp-for="Photo" class="control-label"></label>
                    <input asp-for="Photo" type="file" class="form-control custom-file-input rounded-1" />
                    <span asp-validation-for="Photo" class="text-danger"></span>
                </div>

                <div class="form-group mb-3 ">
                    <label asp-for="CategoryId" class="control-label">Category</label>
                    <select asp-for="CategoryId"
                    asp-items="categoryiesselectList"
                    class="form-control rounded-1">
                        <option value="0">--Select Category--</option>
                    </select>
                    <span asp-validation-for="CategoryId" class="text-danger"></span>
                </div>

                <div class="row">
                    <div class="form-group col-6 ">
                        @if (Model.Id != 0)
                        {
                            <input type="submit" value="Update Book" class="btn btn-primary form-control rounded-1" />
                        }
                        else
                        {
                            <input type="submit" value="Create Book" class="btn btn-primary form-control rounded-1" />
                        }
                    </div>

                    <div class="form-group col-6 ">
                        <a asp-controller="Product" asp-action="Index" class="btn btn-secondry border form-control border-secondary rounded-1">Back to List</a>
                    </div>
                </div>

            </form>
        </div>
        <div class="col-2">
            @if (Model.Id != 0)
            {
                <img src="~/Images/@Model.ImageURL" width=100% class="mt-3" style="border-radius: 5px;" />
            }
        </div>
    </div>

   

</div>


@section Scripts {
    <script>
        tinymce.init({
          selector: 'textarea',
          plugins: [
            // Core editing features
            'anchor', 'autolink', 'charmap', 'codesample', 'emoticons',  'lists', 'searchreplace', 'visualblocks', 'wordcount',
            // Your account includes a free trial of TinyMCE premium features
            // Try the most popular premium features until May 9, 2025:
            'checklist', 'mediaembed', 'casechange', 'formatpainter', 'pageembed', 'a11ychecker', 'tinymcespellchecker', 'permanentpen', 'powerpaste', 'advtable', 'advcode', 'editimage', 'advtemplate', 'ai', 'mentions', 'tinycomments', 'tableofcontents', 'footnotes', 'mergetags', 'autocorrect', 'typography', 'inlinecss', 'markdown','importword', 'exportword', 'exportpdf'
          ],
          toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent | emoticons charmap | removeformat',
          tinycomments_mode: 'embedded',
          tinycomments_author: 'Author name',
          mergetags_list: [
            { value: 'First.Name', title: 'First Name' },
            { value: 'Email', title: 'Email' },
          ],
          ai_request: (request, respondWith) => respondWith.string(() => Promise.reject('See docs to implement AI Assistant')),
        });
    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
